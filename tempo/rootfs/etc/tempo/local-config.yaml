---
target: all

server:
  http_listen_port: 3200
  grpc_listen_port: 9095
query_frontend:
  search:
    # setting these both to 0 will force all
    # range searches to hit the backend
    query_backend_after: 0
    query_ingesters_until: 0
    max_duration: 0

distributor:
  receivers:
    jaeger:
      protocols:
        thrift_http:
        grpc:
        thrift_binary:
        thrift_compact:
    zipkin:
    otlp:
      protocols:
        http:
        grpc:
    opencensus:
  log_received_spans:
    enabled: true

ingester:
  lifecycler:
    address: 127.0.0.1
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1
    final_sleep: 0s
  trace_idle_period: 1s
  max_block_bytes: 1
  max_block_duration: 2s
  complete_block_timeout: 1s
  flush_check_period: 1s

# Configures the metrics generator component of Tempo.
metrics_generator:
  # Specifies which processors to use.
  processor:
    # yamllint disable-line rule:line-length
    # Span metrics create metrics based on span type, duration, name and service.
    span_metrics:
      # Configure extra dimensions to add as metric labels.
      dimensions:
        - http.method
        - http.target
        - http.status_code
        - service.version
    # yamllint disable-line rule:line-length
    # Service graph metrics create node and edge metrics for determinng service interactions.
    service_graphs:
      # Configure extra dimensions to add as metric labels.
      dimensions:
        - http.method
        - http.target
        - http.status_code
        - service.version
    # Configure the local blocks processor.
    local_blocks:
      # yamllint disable-line rule:line-length
      # Ensure that metrics blocks are flushed to storage so TraceQL metrics queries against historical data.
      flush_to_storage: true
  registry:
    external_labels:
      source: tempo
      cluster: home-assistant

  storage:
    path: /data/tempo/generator/wal
    remote_write:
      - url: "${PROMETHEUS_URL}"
        send_exemplars: true

storage:
  trace:
    backend: local
    block:
      bloom_filter_false_positive: .05
    wal:
      path: /data/tempo/wal
    local:
      path: /data/tempo/blocks
    pool:
      max_workers: 100
      queue_depth: 10000

overrides:
  metrics_generator_processors: [service-graphs, span-metrics, local-blocks]
